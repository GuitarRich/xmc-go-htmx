package components

import (
    "fmt"
    "github.com/guitarrich/headless-go-htmx/model"
)

templ RenderPlaceholder(placeholderKey string, placeholders map[string][]model.PlaceholderComponent) {
    <div class="flex flex-row w-full">
        {Log("Rendering placeholder: " + placeholderKey)}
        @templ.Raw(fmt.Sprintf("<!-- Placeholder: [%s] -->", placeholderKey))
        for _, component := range GetPlaceholder(placeholderKey, placeholders) {
            {Log(" --> Rendering component: " + component.ComponentName)}
            @templ.Raw(fmt.Sprintf("<!-- Component: [%s] -->", component.ComponentName))
            @RenderComponent(component)
        }
    </div>
}

func GetPlaceholder(placeholderKey string, placeholders map[string][]model.PlaceholderComponent) []model.PlaceholderComponent {
    return placeholders[placeholderKey]
}

templ RenderComponent(component model.PlaceholderComponent) {
    @GetComponent(component.ComponentName, component)
}

func GetComponent(componentName string, component model.PlaceholderComponent) templ.Component {
    funcMap := map[string]templ.Component {
        "Promo": Promo(component),
        "PartialDesignDynamicPlaceholder": RenderPartialDesignDynamicPlaceholder(component.Params.DynamicPlaceholderID, component),
        "RichText": RichText(component),
        "Image": Image(component),
        "Container": Container(component),
    }

    c := funcMap[componentName]
    if (c == nil) {
        fmt.Println("Component not found: " + componentName)
        return templ.Raw("")
    }
    return c
}

func Log(message string) string {
    fmt.Println(message)
    return ""
}
